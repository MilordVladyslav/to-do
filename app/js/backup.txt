// var p = document.querySelector('p');
// var allp = document.querySelectorAll('p');


// allp.forEach(function(item) {
//     if(item.textContent.includes('the')) {
//         item.remove();
//     }
// })

// var newParagraph = document.createElement('p');
// newParagraph.textContent = 'this is a new element from JavaScript';
// document.querySelector('body').appendChild(newParagraph);



// var todos = [{
//     text: 'Order cat food',
//     completed: true
// }, {
//     text: 'Clean kitchen',
//     completed: true
// }, {
//     text: 'Buy food',
//     completed: false
// }, {
//     text: 'Do work',
//     completed: false
// }, {
//     text: 'Exercise',
//     completed: false
// }]

// var notes = [{
//     text: 'Order cat food',
//     completed: true
// }, {
//     text: 'Clean kitchen',
//     completed: true
// }, {
//     text: 'Buy food',
//     completed: false
// }, {
//     text: 'Do work',
//     completed: false
// }, {
//     text: 'Exercise',
//     completed: false
// }]

// var incompleteTodos = todos.filter(function (todo) {
//     return !todo.completed;
// })

// var summary = document.createElement('h2')
// summary.textContent = `You have ${incompleteTodos.length} todos left`
// document.querySelector('body').appendChild(summary);

// todos.forEach(function(item) {
//     var todosText = document.createElement('p');
//     todosText.textContent = item.text;
//     document.querySelector('body').appendChild(todosText);
    
// })

// // var leftTodos = document.createElement('p');

// // todos.forEach(function(item) {
// //     leftTodos.textContent = '';
// //     if(!item.completed) {
// //         leftTodos.textContent += 1;
// //     }
// // })

// // for(var i =0; i<todos.length; i++) {
// //     if(todos[i].completed == false) {
// //         leftTodos.textContent += 1 ;
// //     }
// // }

// // document.querySelector('body').appendChild(leftTodos);

// // document.querySelector('body').appendChild(left);


// // todosText.forEach(function(item) {
// //     document.querySelector('body').appendChild(todosText);
// // })

// document.querySelector('button').addEventListener('click', function(e) {
//     // c('Ти клікнув тікі шо, Влат ) ти дуже крутий, Влат )');
//     c(e.target.textContent = 'the button wask clicked');
// })

// document.querySelector('#remove-all').addEventListener('click', function(e) {
//     document.querySelectorAll('.the').forEach(function(item){
//         item.remove();
        
//     })
//     c('the button remove all p with the')
// })

// // document.querySelector('#search-text').addEventListener('input', function(e) {
// //     console.log(e.target.value);
// // })

// document.querySelector('#new-todo-text').addEventListener('input', function(e){
//     c(e.target.value);
// })

// var filters = {
//     searchText: ''
// }

// var renderNotes = function (notes, filters) {
//     var filteredNotes = notes.filter(function (note) {
//         return note.title.toLowerCase().includes(filters.searchText.toLowerCase())
//     })
//     console.log(filteredNotes)
// }

// renderNotes(notes, filters)

// document.querySelector('#search-text').addEventListener('input', function(){
//     filters.searchText = e.target.value;
//     renderNotes(notes,filters);
// })




// const notes = [{
//     title: 'my next trip',
//     body: 'I would like to go to Spain'
// }, {
//     title: 'Habbits to work on',
//     body: 'Exercise. Eating a bit better.'
// }, {
//     title: 'Office modification',
//     body: 'Get a new seat'
// }]

// document.querySelector('button').addEventListener('click', function(e) {
//     // c('Ти клікнув тікі шо, Влат ) ти дуже крутий, Влат )');
//     c(e.target.textContent = 'the button wask clicked');
// })



//todoApp logic

function Saving() {
    var notesJSON = localStorage.getItem('notes')
    if (notesJSON !== null) {
        todoApp.notes = JSON.parse(notesJSON);
        todoApp.show(todoApp.notes);
    }
}


var todoApp = {
    notes: [],
    addNote: function(nameTask) {
        
        var errorMessage = '';  
        if(nameTask.length < 1) {
            errorMessage = 'you need to fill input';
            c(errorMessage);
        }

        this.notes.forEach(function(item) {
            if(item.text.toLowerCase() == nameTask) {
                errorMessage = 'You already have the note';
                c(errorMessage);
            }
        })
    
        if(errorMessage.length == 0){
            this.notes.push({text: nameTask, completed: false });
            var allNotes = document.querySelector('#all-notes');
            if(this.notes.length > 1) {
                allNotes.innerHTML = `You have ${this.notes.length} notes`;
            }else {
                allNotes.innerHTML = `You have ${this.notes.length} note`;
            }
            localStorage.setItem('notes', JSON.stringify(this.notes))
        }

        this.show(this.notes);
        
    },
    show: function(whatShow) {
        this.clearList();
        whatShow.forEach(function(item) {
            
            var div = document.createElement('div'); 
            div.setAttribute('class', 'note');
           
            if(item.completed) {
                div.innerHTML = `<p>${item.text}</p>` + `
                <button id='${item.text}' class='remove-note' onclick='todoApp.removeNote(this.id)'>to remove </button>`;
            }else {
                div.innerHTML = `<p>${item.text}</p>` + `
                <button id='${item.text}' class='remove-note' onclick='todoApp.removeNote(this.id)'> to remove </button>
                <button id='${item.text}' class='to-complete' onclick='todoApp.complete(this.id)'> to complete </button>`;
            }
            document.querySelector('#notes').appendChild(div); 

        })
        
    },
    clearList: function() {
        document.querySelectorAll('.note').forEach(function(item) {
            item.remove(); 
        })
    },
    filtering: function(request) {
        this.clearList();
        var filteredNotes = this.notes.filter(function (note) {
            return note.text.toLowerCase().includes(request.toLowerCase())
        })
        this.show(filteredNotes, 'nope');
    },
    complete: function(value) {
        var completedTodosTitle = document.querySelector('#completed-notes');
        this.notes.forEach(function(item, index) {
            if(item.text.toLowerCase() == value) {
                item.completed = true;    
            }
        })
        localStorage.setItem('notes', JSON.stringify(this.notes));
        var completed = this.notes.filter(function (note) {
            return note.completed;
        })
        document.querySelectorAll('p > button').forEach(function(item) {
            c(item.textContent);
        })
        completedTodosTitle.innerHTML = 'You have completed notes: ' + completed.length;
        this.show(this.notes);

    }, 
    removeNote: function(value){
        for(var i = 0; i<this.notes.length; i++) {
            if(this.notes[i].text == value) {
                this.notes.splice(i, 1);
                var remove = value;
                c(remove);
                localStorage.setItem('notes', JSON.stringify(this.notes));
            }
        }
        var allNotes = document.querySelector('#all-notes');
        if(this.notes.length > 1) {
            allNotes.innerHTML = `You have ${this.notes.length} notes`;
        }else {
            allNotes.innerHTML = `You have ${this.notes.length} note`;
        }
        var completed = this.notes.filter(function (note) {
            return note.completed;
        })
        var completedTodosTitle = document.querySelector('#completed-notes');
        completedTodosTitle.innerHTML = 'You have completed notes: ' + completed.length;
        this.show(this.notes);
    },
    showCompleted: function() {
        var completedNotes = this.notes.filter(function(note) {
            return note.completed;
        })
        this.show(completedNotes);
    },
    showAll: function() {
        this.show(this.notes);
    },
    showUncompleted: function() {
        var uncompletedNotes = this.notes.filter(function(note) {
            return !note.completed;
        })
        this.show(uncompletedNotes);
    }
}

Saving();

// localStorage.setItem('location', philadelphia); //to local storage
// c(localStorage.getItem('location')); // read from localstorage
//localStorage.removeItem('location'); // remove some item
//localStorage.clear(); //clearAll

// const user = {
//     name: 'Andrew',
//     age: 27
// }

// var userJSON = JSON.stringify(user) //to json

//c(userJSON);
// localStorage.setItem('user', userJSON);

// var userJSON = localStorage.getItem('user') 
// var user = JSON.parse(userJSON);

// c(`${user.name} is ${user.age}`)

//so make sure we corectly use stringify(tojson) and json parse(fromjson)

document.querySelector('#show-uncompleted').addEventListener('click', function(e) {
    e.preventDefault();
    todoApp.showUncompleted();
})

document.querySelector('#show-completed').addEventListener('click', function(e) {
    e.preventDefault();
    todoApp.showCompleted();
})

document.querySelector('#show-all').addEventListener('click', function(e) {
    e.preventDefault();
    todoApp.showAll();
})

document.querySelector("#name-form").addEventListener('submit', function(e) {
    e.preventDefault();
    todoApp.addNote(e.target.elements.firstName.value);
    e.target.elements.firstName.value = '';
})
document.querySelector('#search-text').addEventListener('input', function(e) {
    todoApp.filtering(e.target.value);    // e.target.value
})

document.querySelector('#for-fun').addEventListener('change', function (e) {
    c(e.target.checked);
})

function c(arg) {
    console.log(arg);
}



        // //html не соответствует javascript проблема в html
        // if(this.notes.length > 0) {

        
        //     this.notes.forEach(function(item) {
        //         var checkingHtml = document.querySelectorAll('.note p');

        //         var toHtml = function(){
        //             checkingHtml.forEach(function(itemHtml) {
        //                 if(item.text.toLowerCase() == itemHtml.toLowerCase()) {
        //                     return false;
        //                 }else {
        //                     return true;
        //                 }
        //             }) 

        //         }

        //         if(toHtml) {
        //             var div = document.createElement('div'); 
        //             div.setAttribute('class', 'note');
        //             div.innerHTML = `<p>${item.text}</p>` + `<button id='${item.text}' class='to-complete' onclick='todoApp.complete(this.id)'>to complete</button>`;
        //             document.querySelector('#notes').appendChild(div); 
        //         }


        //         // document.querySelector('#notes').appendChild(div); 
        //         // var checkingHtml = document.querySelectorAll('.note p');
        //         // checkingHtml.forEach(function(item) {
        //         //     if(item.innerText.toLowerCase() != div.toLowerCase()) {
        //         //         document.querySelector('#notes').appendChild(div); 
        //         //     }
        //         //     c(item.innerText);
        //         // })
                    
        //         // c('text is ' + item.text);
        //     })
        
        // }
        // nameTask = '';




                // for(var i = 0; i < checkingHtml.length; i++) {
        //     c('wdqwd');
        // }
    
        // var error = function() {
        //     if(checkingHtml.length > 0){
        //         for(var i = 0; i < this.notes.length; i++) {
        //             for(var j = 0; j < checkingHtml.length; j++) {
        //                 if(this.notes[i].text.toLowerCase() == checkingHtml[j].innerText.toLowerCase() ) {
        //                     return true;
        //                 }
        //             }
        //         }
        //     }else {
        //         c('less than one');
        //         return false;
        //     }
        // }

        // if(!error) {
        //     whatShow.forEach(function(item) {
        //         var div = document.createElement('div'); 
        //         div.setAttribute('class', 'note');
        //         div.innerHTML = `<p>${item.text}</p>` + `<button id='${item.text}' class='to-complete' onclick='todoApp.complete(this.id)'>to complete</button>`;
        //         document.querySelector('#notes').appendChild(div); 
        //     })            
        // }






// WITHOUT localStorage





// var p = document.querySelector('p');
// var allp = document.querySelectorAll('p');


// allp.forEach(function(item) {
//     if(item.textContent.includes('the')) {
//         item.remove();
//     }
// })

// var newParagraph = document.createElement('p');
// newParagraph.textContent = 'this is a new element from JavaScript';
// document.querySelector('body').appendChild(newParagraph);



// var todos = [{
//     text: 'Order cat food',
//     completed: true
// }, {
//     text: 'Clean kitchen',
//     completed: true
// }, {
//     text: 'Buy food',
//     completed: false
// }, {
//     text: 'Do work',
//     completed: false
// }, {
//     text: 'Exercise',
//     completed: false
// }]

// var notes = [{
//     text: 'Order cat food',
//     completed: true
// }, {
//     text: 'Clean kitchen',
//     completed: true
// }, {
//     text: 'Buy food',
//     completed: false
// }, {
//     text: 'Do work',
//     completed: false
// }, {
//     text: 'Exercise',
//     completed: false
// }]

// var incompleteTodos = todos.filter(function (todo) {
//     return !todo.completed;
// })

// var summary = document.createElement('h2')
// summary.textContent = `You have ${incompleteTodos.length} todos left`
// document.querySelector('body').appendChild(summary);

// todos.forEach(function(item) {
//     var todosText = document.createElement('p');
//     todosText.textContent = item.text;
//     document.querySelector('body').appendChild(todosText);
    
// })

// // var leftTodos = document.createElement('p');

// // todos.forEach(function(item) {
// //     leftTodos.textContent = '';
// //     if(!item.completed) {
// //         leftTodos.textContent += 1;
// //     }
// // })

// // for(var i =0; i<todos.length; i++) {
// //     if(todos[i].completed == false) {
// //         leftTodos.textContent += 1 ;
// //     }
// // }

// // document.querySelector('body').appendChild(leftTodos);

// // document.querySelector('body').appendChild(left);


// // todosText.forEach(function(item) {
// //     document.querySelector('body').appendChild(todosText);
// // })

// document.querySelector('button').addEventListener('click', function(e) {
//     // c('Ти клікнув тікі шо, Влат ) ти дуже крутий, Влат )');
//     c(e.target.textContent = 'the button wask clicked');
// })

// document.querySelector('#remove-all').addEventListener('click', function(e) {
//     document.querySelectorAll('.the').forEach(function(item){
//         item.remove();
        
//     })
//     c('the button remove all p with the')
// })

// // document.querySelector('#search-text').addEventListener('input', function(e) {
// //     console.log(e.target.value);
// // })

// document.querySelector('#new-todo-text').addEventListener('input', function(e){
//     c(e.target.value);
// })

// var filters = {
//     searchText: ''
// }

// var renderNotes = function (notes, filters) {
//     var filteredNotes = notes.filter(function (note) {
//         return note.title.toLowerCase().includes(filters.searchText.toLowerCase())
//     })
//     console.log(filteredNotes)
// }

// renderNotes(notes, filters)

// document.querySelector('#search-text').addEventListener('input', function(){
//     filters.searchText = e.target.value;
//     renderNotes(notes,filters);
// })




// const notes = [{
//     title: 'my next trip',
//     body: 'I would like to go to Spain'
// }, {
//     title: 'Habbits to work on',
//     body: 'Exercise. Eating a bit better.'
// }, {
//     title: 'Office modification',
//     body: 'Get a new seat'
// }]

// document.querySelector('button').addEventListener('click', function(e) {
//     // c('Ти клікнув тікі шо, Влат ) ти дуже крутий, Влат )');
//     c(e.target.textContent = 'the button wask clicked');
// })



//todoApp logic

var todoApp = {
    notes: [],
    addNote: function(nameTask) {
        
        var errorMessage = '';  
        if(nameTask.length < 1) {
            errorMessage = 'you need to fill input';
            c(errorMessage);
        }

        this.notes.forEach(function(item) {
            if(item.text.toLowerCase() == nameTask) {
                errorMessage = 'You already have the note';
                c(errorMessage);
            }
        })
    
        if(errorMessage.length == 0){
            this.notes.push({text: nameTask, completed: false });
            var allNotes = document.querySelector('#all-notes');
            if(this.notes.length > 1) {
                allNotes.innerHTML = `You have ${this.notes.length} notes`;
            }else {
                allNotes.innerHTML = `You have ${this.notes.length} note`;
            }
        }

        this.show(this.notes);
        
    },
    show: function(whatShow) {
        this.clearList();
        whatShow.forEach(function(item) {
            
            var div = document.createElement('div'); 
            div.setAttribute('class', 'note');
           
            if(item.completed) {
                div.innerHTML = `<p>${item.text}</p>` + `
                <button id='${item.text}' class='remove-note' onclick='todoApp.removeNote(this.id)'>to remove </button>`;
            }else {
                div.innerHTML = `<p>${item.text}</p>` + `
                <button id='${item.text}' class='remove-note' onclick='todoApp.removeNote(this.id)'> to remove </button>
                <button id='${item.text}' class='to-complete' onclick='todoApp.complete(this.id)'> to complete </button>`;
            }
            document.querySelector('#notes').appendChild(div); 

        })
        
    },
    clearList: function() {
        document.querySelectorAll('.note').forEach(function(item) {
            item.remove(); 
        })
    },
    filtering: function(request) {
        this.clearList();
        var filteredNotes = this.notes.filter(function (note) {
            return note.text.toLowerCase().includes(request.toLowerCase())
        })
        this.show(filteredNotes, 'nope');
    },
    complete: function(value) {
        var completedTodosTitle = document.querySelector('#completed-notes');
        this.notes.forEach(function(item, index) {
            if(item.text.toLowerCase() == value) {
                item.completed = true;
            }
        })

        var completed = this.notes.filter(function (note) {
            return note.completed;
        })
        document.querySelectorAll('p > button').forEach(function(item) {
            c(item.textContent);
        })
        completedTodosTitle.innerHTML = 'You have completed notes: ' + completed.length;
        this.show(this.notes);

    }, 
    removeNote: function(value){
        for(var i = 0; i<this.notes.length; i++) {
            if(this.notes[i].text == value) {
                this.notes.splice(i, 1);
            }
        }
        var allNotes = document.querySelector('#all-notes');
        if(this.notes.length > 1) {
            allNotes.innerHTML = `You have ${this.notes.length} notes`;
        }else {
            allNotes.innerHTML = `You have ${this.notes.length} note`;
        }
        var completed = this.notes.filter(function (note) {
            return note.completed;
        })
        var completedTodosTitle = document.querySelector('#completed-notes');
        completedTodosTitle.innerHTML = 'You have completed notes: ' + completed.length;
        this.show(this.notes);
    },
    showCompleted: function() {
        var completedNotes = this.notes.filter(function(note) {
            return note.completed;
        })
        this.show(completedNotes);
    },
    showAll: function() {
        this.show(this.notes);
    },
    showUncompleted: function() {
        var uncompletedNotes = this.notes.filter(function(note) {
            return !note.completed;
        })
        this.show(uncompletedNotes);
    }
}
document.querySelector('#show-uncompleted').addEventListener('click', function(e) {
    e.preventDefault();
    todoApp.showUncompleted();
})

document.querySelector('#show-completed').addEventListener('click', function(e) {
    e.preventDefault();
    todoApp.showCompleted();
})

document.querySelector('#show-all').addEventListener('click', function(e) {
    e.preventDefault();
    todoApp.showAll();
})

document.querySelector("#name-form").addEventListener('submit', function(e) {
    e.preventDefault();
    todoApp.addNote(e.target.elements.firstName.value);
    e.target.elements.firstName.value = '';
})
document.querySelector('#search-text').addEventListener('input', function(e) {
    todoApp.filtering(e.target.value);    // e.target.value
})

document.querySelector('#for-fun').addEventListener('change', function (e) {
    c(e.target.checked);
})

function c(arg) {
    console.log(arg);
}



        // //html не соответствует javascript проблема в html
        // if(this.notes.length > 0) {

        
        //     this.notes.forEach(function(item) {
        //         var checkingHtml = document.querySelectorAll('.note p');

        //         var toHtml = function(){
        //             checkingHtml.forEach(function(itemHtml) {
        //                 if(item.text.toLowerCase() == itemHtml.toLowerCase()) {
        //                     return false;
        //                 }else {
        //                     return true;
        //                 }
        //             }) 

        //         }

        //         if(toHtml) {
        //             var div = document.createElement('div'); 
        //             div.setAttribute('class', 'note');
        //             div.innerHTML = `<p>${item.text}</p>` + `<button id='${item.text}' class='to-complete' onclick='todoApp.complete(this.id)'>to complete</button>`;
        //             document.querySelector('#notes').appendChild(div); 
        //         }


        //         // document.querySelector('#notes').appendChild(div); 
        //         // var checkingHtml = document.querySelectorAll('.note p');
        //         // checkingHtml.forEach(function(item) {
        //         //     if(item.innerText.toLowerCase() != div.toLowerCase()) {
        //         //         document.querySelector('#notes').appendChild(div); 
        //         //     }
        //         //     c(item.innerText);
        //         // })
                    
        //         // c('text is ' + item.text);
        //     })
        
        // }
        // nameTask = '';




                // for(var i = 0; i < checkingHtml.length; i++) {
        //     c('wdqwd');
        // }
    
        // var error = function() {
        //     if(checkingHtml.length > 0){
        //         for(var i = 0; i < this.notes.length; i++) {
        //             for(var j = 0; j < checkingHtml.length; j++) {
        //                 if(this.notes[i].text.toLowerCase() == checkingHtml[j].innerText.toLowerCase() ) {
        //                     return true;
        //                 }
        //             }
        //         }
        //     }else {
        //         c('less than one');
        //         return false;
        //     }
        // }

        // if(!error) {
        //     whatShow.forEach(function(item) {
        //         var div = document.createElement('div'); 
        //         div.setAttribute('class', 'note');
        //         div.innerHTML = `<p>${item.text}</p>` + `<button id='${item.text}' class='to-complete' onclick='todoApp.complete(this.id)'>to complete</button>`;
        //         document.querySelector('#notes').appendChild(div); 
        //     })            
        // }





04.09.2018

function Saving() {
    var notesJSON = localStorage.getItem('notes')
    if (notesJSON !== null) {
        todoApp.notes = JSON.parse(notesJSON);
        todoApp.show(todoApp.notes);
    }
}


var todoApp = {
    notes: [],
    addNote: function(nameTask) {
        var errorMessage = '';  
        if(nameTask.length < 1) {
            errorMessage = 'you need to fill input';
            c(errorMessage);
        }

        this.notes.forEach(function(item) {
            if(item.text.toLowerCase() == nameTask) {
                errorMessage = 'You already have the note';
                c(errorMessage);
            }
        })
    
        if(errorMessage.length == 0){
            this.notes.push({text: nameTask, completed: false, id: this.notes.length });
            var allNotes = document.querySelector('#all-notes');
            if(this.notes.length > 1) {
                allNotes.innerHTML = `You have ${this.notes.length} notes`;
            }else {
                allNotes.innerHTML = `You have ${this.notes.length} note`;
            }
            localStorage.setItem('notes', JSON.stringify(this.notes))
        }

        this.show(this.notes);
        
    },
    show: function(whatShow) {
        this.clearList();
        whatShow.forEach(function(item) {
            
            var div = document.createElement('div'); 
            var completeButton = document.createElement('button');
            var removeButton = document.createElement('button');
            completeButton.innerHTML = 'to complete';
            removeButton.innerHTML = 'to remove';
            completeButton.setAttribute('class', 'to-complete');
            removeButton.setAttribute('id', `${this.notes.length}`);
            div.setAttribute('class', 'note');
           
            if(item.completed) {
                div.innerHTML = `<p>${item.text}</p>` + `
                <button id='${item.text}' class='remove-note' onclick='todoApp.removeNote(this.id)'>to remove </button>`;
            }else {
                div.innerHTML = `<p>${item.text}</p>` + `
                <button id='${item.text}' class='remove-note' onclick='todoApp.removeNote(this.id)'> to remove </button>
                <button id='${item.text}' class='to-complete' onclick='todoApp.complete(this.id)'> to complete </button>`;
            }
            document.querySelector('#notes').appendChild(div); 

        })
        
    },
    clearList: function() {
        document.querySelectorAll('.note').forEach(function(item) {
            item.remove(); 
        })
    },
    filtering: function(request) {
        this.clearList();
        var filteredNotes = this.notes.filter(function (note) {
            return note.text.toLowerCase().includes(request.toLowerCase())
        })
        this.show(filteredNotes, 'nope');
    },
    complete: function(value) {
        var completedTodosTitle = document.querySelector('#completed-notes');
        this.notes.forEach(function(item, index) {
            if(item.text.toLowerCase() == value.toLowerCase()) {
                item.completed = true;    
            }
        })
        localStorage.setItem('notes', JSON.stringify(this.notes));
        var completed = this.notes.filter(function (note) {
            return note.completed;
        })
        document.querySelectorAll('p > button').forEach(function(item) {
            c(item.textContent);
        })
        completedTodosTitle.innerHTML = 'You have completed notes: ' + completed.length;
        this.show(this.notes);

    }, 
    removeNote: function(value){
        for(var i = 0; i<this.notes.length; i++) {
            if(this.notes[i].text == value) {
                this.notes.splice(i, 1);
                var remove = value;
                c(remove);
                localStorage.setItem('notes', JSON.stringify(this.notes));
            }
        }
        var allNotes = document.querySelector('#all-notes');
        if(this.notes.length > 1) {
            allNotes.innerHTML = `You have ${this.notes.length} notes`;
        }else {
            allNotes.innerHTML = `You have ${this.notes.length} note`;
        }
        var completed = this.notes.filter(function (note) {
            return note.completed;
        })
        var completedTodosTitle = document.querySelector('#completed-notes');
        completedTodosTitle.innerHTML = 'You have completed notes: ' + completed.length;
        this.show(this.notes);
    },
    showCompleted: function() {
        var completedNotes = this.notes.filter(function(note) {
            return note.completed;
        })
        this.show(completedNotes);
    },
    showAll: function() {
        this.show(this.notes);
    },
    showUncompleted: function() {
        var uncompletedNotes = this.notes.filter(function(note) {
            return !note.completed;
        })
        this.show(uncompletedNotes);
    }
}
Saving();



// localStorage.setItem('location', philadelphia); //to local storage
// c(localStorage.getItem('location')); // read from localstorage
//localStorage.removeItem('location'); // remove some item
//localStorage.clear(); //clearAll

// const user = {
//     name: 'Andrew',
//     age: 27
// }

// var userJSON = JSON.stringify(user) //to json

//c(userJSON);
// localStorage.setItem('user', userJSON);

// var userJSON = localStorage.getItem('user') 
// var user = JSON.parse(userJSON);

// c(`${user.name} is ${user.age}`)

//so make sure we corectly use stringify(tojson) and json parse(fromjson)

document.querySelector('#show-uncompleted').addEventListener('click', function(e) {
    e.preventDefault();
    todoApp.showUncompleted();
})

document.querySelector('#show-completed').addEventListener('click', function(e) {
    e.preventDefault();
    todoApp.showCompleted();
})

document.querySelector('#show-all').addEventListener('click', function(e) {
    e.preventDefault();
    todoApp.showAll();
})

document.querySelector("#name-form").addEventListener('submit', function(e) {
    e.preventDefault();
    todoApp.addNote(e.target.elements.firstName.value);
    e.target.elements.firstName.value = '';
})
document.querySelector('#search-text').addEventListener('input', function(e) {
    todoApp.filtering(e.target.value);    // e.target.value
})

document.querySelector('#for-fun').addEventListener('change', function (e) {
    c(e.target.checked);
})

function c(arg) {
    console.log(arg);
}





//todoApp logic

// function Saving() {
//     var notesJSON = localStorage.getItem('notes')
//     if (notesJSON !== null) {
//         todoApp.notes = JSON.parse(notesJSON);
//         todoApp.show(todoApp.notes);
//     }
// }







// localStorage.setItem('location', philadelphia); //to local storage
// c(localStorage.getItem('location')); // read from localstorage
//localStorage.removeItem('location'); // remove some item
//localStorage.clear(); //clearAll

// const user = {
//     name: 'Andrew',
//     age: 27
// }

// var userJSON = JSON.stringify(user) //to json

//c(userJSON);
// localStorage.setItem('user', userJSON);

// var userJSON = localStorage.getItem('user') 
// var user = JSON.parse(userJSON);

// c(`${user.name} is ${user.age}`)

//so make sure we corectly use stringify(tojson) and json parse(fromjson)